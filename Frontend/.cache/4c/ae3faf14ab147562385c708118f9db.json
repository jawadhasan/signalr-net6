{"id":"../node_modules/@microsoft/signalr/dist/esm/HttpClient.js","dependencies":[{"name":"C:\\workspace\\gitrepos\\public\\.NET\\signalr-net6\\Frontend\\node_modules\\@microsoft\\signalr\\dist\\esm\\HttpClient.js.map","includedInParent":true,"mtime":1669386455699},{"name":"C:\\workspace\\gitrepos\\public\\.NET\\signalr-net6\\Frontend\\package.json","includedInParent":true,"mtime":1669299727015},{"name":"C:\\workspace\\gitrepos\\public\\.NET\\signalr-net6\\Frontend\\node_modules\\@microsoft\\signalr\\package.json","includedInParent":true,"mtime":1669386447291}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpClient = exports.HttpResponse = void 0;\n\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n/** Represents an HTTP response. */\nclass HttpResponse {\n  constructor(statusCode, statusText, content) {\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.content = content;\n  }\n\n}\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\n\n\nexports.HttpResponse = HttpResponse;\n\nclass HttpClient {\n  get(url, options) {\n    return this.send({ ...options,\n      method: \"GET\",\n      url\n    });\n  }\n\n  post(url, options) {\n    return this.send({ ...options,\n      method: \"POST\",\n      url\n    });\n  }\n\n  delete(url, options) {\n    return this.send({ ...options,\n      method: \"DELETE\",\n      url\n    });\n  }\n  /** Gets all cookies that apply to the specified URL.\r\n   *\r\n   * @param url The URL that the cookies are valid for.\r\n   * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n   */\n  // @ts-ignore\n\n\n  getCookieString(url) {\n    return \"\";\n  }\n\n}\n\nexports.HttpClient = HttpClient;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/HttpClient.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":12,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":12,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":12,"column":18}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":12,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":2}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":13}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":13,"column":14}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":24}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":13,"column":26}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":36}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":13,"column":38}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":13,"column":45}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":54},"generated":{"line":13,"column":47}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":14,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":14,"column":9}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":14,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":14,"column":22}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":73,"column":24},"generated":{"line":14,"column":32}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":15,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":15,"column":9}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":15,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":15,"column":22}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":15,"column":32}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":16,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":16,"column":9}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":16,"column":16}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":16,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":75,"column":24},"generated":{"line":16,"column":26}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":76,"column":5},"generated":{"line":17,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":19,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":28,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":83,"column":22},"generated":{"line":28,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":28,"column":16}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":83,"column":32},"generated":{"line":28,"column":17}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":29,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":29,"column":2}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":29,"column":5}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":15},"generated":{"line":29,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":29,"column":9}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":28},"generated":{"line":29,"column":11}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":29,"column":18}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":98,"column":49},"generated":{"line":29,"column":20}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":30,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":15},"generated":{"line":30,"column":11}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":20},"generated":{"line":30,"column":16}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":15},"generated":{"line":30,"column":20}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":30,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":100,"column":12},"generated":{"line":30,"column":23}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":100,"column":15},"generated":{"line":30,"column":26}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":30,"column":33}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":101,"column":12},"generated":{"line":31,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":101,"column":12},"generated":{"line":31,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":101,"column":18},"generated":{"line":31,"column":12}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":101,"column":20},"generated":{"line":31,"column":14}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":31,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":102,"column":12},"generated":{"line":32,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":102,"column":12},"generated":{"line":32,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":33,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":15},"generated":{"line":33,"column":5}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":33,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":104,"column":5},"generated":{"line":34,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":11},"generated":{"line":36,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":11},"generated":{"line":36,"column":2}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":15},"generated":{"line":36,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":16},"generated":{"line":36,"column":7}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":15},"generated":{"line":36,"column":10}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":29},"generated":{"line":36,"column":12}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":15},"generated":{"line":36,"column":19}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":120,"column":50},"generated":{"line":36,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":37,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":15},"generated":{"line":37,"column":11}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":20},"generated":{"line":37,"column":16}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":15},"generated":{"line":37,"column":20}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":37,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":122,"column":12},"generated":{"line":37,"column":23}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":122,"column":15},"generated":{"line":37,"column":26}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":37,"column":33}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":123,"column":12},"generated":{"line":38,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":123,"column":12},"generated":{"line":38,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":38,"column":12}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":123,"column":20},"generated":{"line":38,"column":14}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":38,"column":20}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":124,"column":12},"generated":{"line":39,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":124,"column":12},"generated":{"line":39,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":40,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":15},"generated":{"line":40,"column":5}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":40,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":126,"column":5},"generated":{"line":41,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":11},"generated":{"line":43,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":11},"generated":{"line":43,"column":2}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":17},"generated":{"line":43,"column":8}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":18},"generated":{"line":43,"column":9}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":17},"generated":{"line":43,"column":12}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":31},"generated":{"line":43,"column":14}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":17},"generated":{"line":43,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":142,"column":52},"generated":{"line":43,"column":23}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":8},"generated":{"line":44,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":15},"generated":{"line":44,"column":11}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":20},"generated":{"line":44,"column":16}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":15},"generated":{"line":44,"column":20}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":25},"generated":{"line":44,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":144,"column":12},"generated":{"line":44,"column":23}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":144,"column":15},"generated":{"line":44,"column":26}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":25},"generated":{"line":44,"column":33}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":145,"column":12},"generated":{"line":45,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":145,"column":12},"generated":{"line":45,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":145,"column":18},"generated":{"line":45,"column":12}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":145,"column":20},"generated":{"line":45,"column":14}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":25},"generated":{"line":45,"column":22}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":146,"column":12},"generated":{"line":46,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":146,"column":12},"generated":{"line":46,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":25},"generated":{"line":47,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":15},"generated":{"line":47,"column":5}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":143,"column":8},"generated":{"line":47,"column":6}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":148,"column":5},"generated":{"line":48,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":157,"column":4},"generated":{"line":49,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":162,"column":4},"generated":{"line":54,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":11},"generated":{"line":57,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":11},"generated":{"line":57,"column":2}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":26},"generated":{"line":57,"column":17}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":27},"generated":{"line":57,"column":18}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":26},"generated":{"line":57,"column":21}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":163,"column":38},"generated":{"line":57,"column":23}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":164,"column":8},"generated":{"line":58,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":164,"column":15},"generated":{"line":58,"column":11}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":164,"column":8},"generated":{"line":58,"column":13}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":165,"column":5},"generated":{"line":59,"column":0}},{"source":"../../src/HttpClient.ts","name":null,"original":{"line":83,"column":32},"generated":{"line":61,"column":0}}],"sources":{"../../src/HttpClient.ts":"// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"57f2dac4440db1e8625c3e0fa903889c","cacheData":{"env":{}}}